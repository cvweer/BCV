movies4%>%
summarise(mean(log_profits, na.rm=T))
movies4=read_tsv("movies4.tsv")
movies4=movies4%>%
mutate(profits=revenue-budget)%>%
mutate(log_profits = ifelse(profits <= 0, NA, log(profits)))
movies4
movies4%>%
summarise(mean(log_profits, na.rm=T))
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot()
ggplot(movies4, aes(x=runtime, y=vote_average)) +
geom_point()
#WRITE YOUR CODE HERE
library(tidyverse)
y<- x %>%
group_by(first_actor)%>%
count(first_actor)%>%
arrange(desc(n))
head(y,2)
#WRITE YOUR CODE HERE
z<- x%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
z = slice(z, -(1:64))
head(z,1)
mean(x$revenue)
mean(y$n)
#WRITE YOUR CODE HERE
z<- x%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
z = slice(z, -(1:64))
head(z,1)
mean_revenue = mean(x$revenue)
mean_revenue
knitr::opts_chunk$set(echo = TRUE)
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
library(tidyverse)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
View(movies4)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
variance <- var(movies4$profit_in_millions)
variance
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars,
col = "red",
lwd = 3))
hist(sample_vars)
abline(v=mean(sample_vars,
col = "red",
lwd = 3))
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(s=sd(sample_vars),
col="blue",
lwd = 3)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
mean(sample_vars)
sd(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
knitr::opts_chunk$set(echo = TRUE)
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
#install.packages("readr")
#install.packages("tidyverse")
library(tidyverse)
library(readr)
movies4 = read_tsv("movies4.tsv")
movies4 %>%
count(index)
movies4
#808 observations
#19 variables
#19 subjects
#A subject consists of a multitude of information about a movie, from the title to the release year to the head actor to the vote average.
#Nominal variables: keywords, original_language, title, genre, first_actor, first_actor_gender, director_first_name, director_gender
#Ordinal variables: NA
#Interval variables: index, release_date, release_year, release_month, release_day
#Ratio variables: budget, popularity, revenue, runtime, vote_average, vote_count
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
profit_summary = movies4 %>%
summarise(mean_profit=mean(profits, na.rm=T),
median_profit=median(profits, na.rm=T),
max_profit=max(profits, na.rm=T),
min_profit=min(profits, na.rm=T)
)
profit_summary
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4_highest = movies4 %>%
filter(profits==max(profits, na.rm=T))%>%
select(title, profits)
movies4_highest
movies4_lowest = movies4 %>%
filter(profits==min(profits, na.rm=T))%>%
select(title, profits)
movies4_lowest
library (ggplot2)
boxplot_profits<-ggplot(movies4, aes(x = title, y = profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits
quartiles = quantile(movies4$profits)
quartiles
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 =movies4%>%
mutate(log_profits=log(profits))
movies4%>%
summarise(mean(log_profits, na.rm=T))
movies4=read_tsv("movies4.tsv")
movies4=movies4%>%
mutate(profits=revenue-budget)%>%
mutate(log_profits = ifelse(profits <= 0, NA, log(profits)))
movies4
movies4%>%
summarise(mean(log_profits, na.rm=T))
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot()
ggplot(movies4, aes(x=runtime, y=vote_average)) +
geom_point()
#WRITE YOUR CODE HERE
library(tidyverse)
y<- x %>%
group_by(first_actor)%>%
count(first_actor)%>%
arrange(desc(n))
head(y,2)
#WRITE YOUR CODE HERE
z<- x%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
z = slice(z, -(1:64))
head(z,1)
mean_revenue = mean(x$revenue)
mean_revenue
mean(y$n)
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
library(tidyverse)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
variance <- var(movies4$profit_in_millions)
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars)
hist(sample_vars)
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
mean(sample_vars)
sd(sample_vars)
print("mean = ", mean(sample_vars))
cat("mean = ", mean(sample_vars))
cat("standard deviation =",sd(sample_vars))
cat("mean = ", mean(sample_vars), n/)
cat("mean = ", mean(sample_vars), \n)
cat("mean = ", mean(sample_vars), "\n")
cat("standard deviation =",sd(sample_vars))
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
cat("mean = ", mean(sample_vars), "\n")
cat("standard deviation =",sd(sample_vars))
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
library(tidyverse)
library(readr)
movies4
movies_thriller <- movies4 %>%
filter(genre=="Thriller")%>%
summarise(
n=n(),
mean_runtime=mean(runtime, na.rm=T),
sd_runtime=sd(runtime, na.rm=T),
se=sd_runtime/sqrt(n()),
t_critical=qt(0.995, df=n-1),
ci_lower=mean_runtime-t_critical*se,
ci_upper=mean_runtime+t_critical*se)%>%
print()
print(sample_vars[1:10])
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
set.seed(2934)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
hist(sample_vars)
mean(sample_vars)
sd(sample_vars)
set.seed(2934)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
hist(sample_vars)
mean(sample_vars)
sd(sample_vars)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
hist(sample_vars)
mean(sample_vars)
sd(sample_vars)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
hist(sample_vars)
mean(sample_vars)
sd(sample_vars)
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
hist(sample_vars)
mean(sample_vars)
sd(sample_vars)
hist(sample_vars)
meand_vars = mean(sample_vars)
meand_sd = sd(sample_vars)
hist(sample_vars)
meand_vars = mean(sample_vars)
meand_sd = sd(sample_vars)
meand_vars
hist(sample_vars)
mean(sample_vars)
sd(sample_vars)
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
knitr::opts_chunk$set(echo = TRUE)
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
library(tidyverse)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
variance <- var(movies4$profit_in_millions)
variance
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
cat("mean = ", mean(sample_vars), "\n")
cat("standard deviation =",sd(sample_vars))
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
View(movies4)
knitr::opts_chunk$set(echo = TRUE)
n = length(movies4$runtime)
n = length(movies4)
library(forcats)
s2 = var(movies4$runtime)
n = length(movies4$runtime)
o2 = 500
chi2 = ((n-1)*s2)/o2
a = 0.05
crit_low = qchisq(alpha/2, df=n-1)
s2 = var(movies4$runtime)
n = length(movies4$runtime)
o2 = 500
chi2 = ((n-1)*s2)/o2
a = 0.05
crit_low = qchisq(a/2, df=n-1)
crit_high = qcisq(1-a/2, df = n-1)
s2 = var(movies4$runtime)
n = length(movies4$runtime)
o2 = 500
chi2 = ((n-1)*s2)/o2
a = 0.05
crit_low = qchisq(a/2, df=n-1)
crit_high = qchisq(1-a/2, df = n-1)
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0, since the variance is significantly different from 500"
}else{
conc = "accept h0, there is nothing that suggests that the variance differs significant;y from 500"
}
print(conc)
hist(movies$runtime)
hist(movies4$runtime)
qqnorm(movies4$runtime)
qqline(movies4$runtime)
qqnorm(movies4$runtime)
qqline(, col = "red")
qqnorm(movies4$runtime)
qqline(movies4$runtime, col = "red")
#sample variance and size
s = var(movies4$runtime)
n = length(movies4$runtime)
#test statistic
o = 500
chi = ((n-1)*s2)/o2
#critical values
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
#conclusion
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0, since the variance is significantly different from 500"
}else{
conc = "accept h0, there is nothing that suggests that the variance differs significant;y from 500"
}
print(conc)
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0"
}else{
conc = "accept h0"
}
print(conc)
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0"
}else{
conc = "accept H0"
}
print(conc)
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0"
}else{
conc = "accept H0"
}
conc
knitr::opts_chunk$set(echo = TRUE)
hist(movies4$runtime)
qqnorm(movies4$runtime)
qqline(movies4$runtime, col = "red")
