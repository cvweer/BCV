filter(profits==max(profits, na.rm=T))%>%
select(title, profits)
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4_highest = movies4 %>%
filter(profits==max(profits, na.rm=T))%>%
select(title, profits)
movies4_highest
movies4_lowest = movies4 %>%
filter(profits==min(profits, na.rm=T))%>%
select(title, profits)
movies4_lowest
library (ggplot2)
boxplot_profits=ggplot(movies4, aes(y=profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits=ggplot(movies4, aes(y=profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits
boxplot_profits=ggplot(movies4, aes(y=profits)) +
geom_boxplot() +
labs(title="Movie Profits",
x="",
y="Profit")
boxplot_profits
boxplot_profits=ggplot(movies4, aes(y=profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits
ggplot(movies4, aes(x = "", y = profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits
quartiles = quantile(movies4$profits, na.rm+T)
quartiles
quartiles = quantile(movies4$profits)
quartiles
print("Quartile Values:")
print(paste("Q1 (25th percentile):", quartiles[2]))
print(paste("Q2 (50th percentile/Median):", quartiles[3]))
print(paste("Q3 (75th percentile):", quartiles[4]))
print(paste("Maximum (Q4 range):", quartiles[5]))
quartiles
print("Quartile Values:")
print(paste("Q1 (25th percentile):", quartiles[2]))
print(paste("Q2 (50th percentile/Median):", quartiles[3]))
print(paste("Q3 (75th percentile):", quartiles[4]))
print(paste("Maximum (Q4 range):", quartiles[5]))
quartiles
print("Quartile Values:")
print(paste("Q1 (25th percentile):", quartiles[2]))
print(paste("Q2 (50th percentile/Median):", quartiles[3]))
print(paste("Q3 (75th percentile):", quartiles[4]))
print(paste("Maximum (Q4 range):", quartiles[5]))
boxplot_profits
movies4
ggplot(movies4, aes(x = title, y = profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits
movies4 = movies4 %>%
mutate(log_of_profits=log(profits))
movies4 = movies4 %>%
mutate(log_of_profits=log(profits))
movies4 = movies4 %>%
mutate(log_of_profits=log(profits), na.rm=T)
movies4 = movies4 %>%
mutate(log_of_profits=log(profits, na.rm=T))
movies4 = movies4 %>%
mutate(log_of_profits=log(profits))
movies4 = movies4 %>%
mutate(log_of_profits=log(profits)) %>%
mean(log_of_profits)
movies4 = movies4 %>%
mutate(log_of_profits=log(profits)) %>%
mean(log_of_profits, na.rm=T)
movies4 = movies4 %>%
mutate(log_of_profits=log(profits))%>%
mean(log_of_profits, na.rm=T)
movies4 = movies4 %>%
mutate(log_of_profits=log(profits))
movies4
movies4
movies4 = read_tsv("movies4.tsv")
movies4 %>%
mutate(log_of_profits=log(profits))
movies4
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4
mutate(log_profits=log(profits)
movies4
mutate(log_profits=log(profits)
mutate(log_profits=log(profits)
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4%>%
mutate(log_profits=log(profits)
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4%>%
mutate(log_profits=log(profits)
movies4%>%
mutate(log_profits=log(profits))
movies4%>%
mutate(log_profits=log(profits))
movies4%>%
mutate(log_profits=log(profits))%>%
summarise(mean(log_profits))
movies4%>%
mutate(log_profits=log(profits))%>%
summarise(mean(log_profits, na.rm=T))
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 =movies4%>%
mutate(log_profits=log(profits))%>%
summarise(mean(log_profits, na.rm=T))
movies4 %>%
mutate(log_profits = ifelse(profits > 0, log(profits), NA))
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 =movies4%>%
mutate(log_profits=log(profits))
movies4 %>%
mutate(log_profits = ifelse(profits > 0, log(profits), NA))
movies4 %>%
mutate(log_profits = ifelse(profits > 0, log(profits), NA)) %>%
mean(log_profits, na.rm=T)
movies4 %>%
mutate(log_profits = ifelse(profits > 0, log(profits), NA)) %>%
```
movies4 %>%
mutate(log_profits = ifelse(profits > 0, log(profits), NA))
movies4 = movies4 %>%
mutate(log_profits = ifelse(profits > 0, log(profits), NA))
movies4 = movies4 %>%
mutate(log_profits = ifelse(profits > 0, log(profits), NA))
movies4 = movies4 %>%
mutate(log_profits = ifelse(profits > 0, log(profits), NA))
movies4 = movies4 %>%
mutate(log_profits = ifelse(profits <+ 0, NA, log(profits)))
movies4=read_tsv("movies4.tsv")
movies4=movies4%>%
mutate(profits=revenue-budget)
movies4=read_tsv("movies4.tsv")
movies4=movies4%>%
mutate(profits=revenue-budget)%>%
mutate(log_profits = ifelse(profits <+ 0, NA, log(profits)))
movies4
movies4=read_tsv("movies4.tsv")
movies4=movies4%>%
mutate(profits=revenue-budget)%>%
mutate(log_profits = ifelse(profits <= 0, NA, log(profits)))
movies4
movies4%>%
summarise(mean(log_profits))
movies4%>%
summarise(mean(log_profits, na.rm=T))
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot()
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot() +
theme_minimal()
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot() +
theme_minimal()
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot()
ggplot(movies4, aex(x=runtime, y=vote_average)) +
geom_point()
ggplot(movies4, aes(x=runtime, y=vote_average)) +
geom_point()
=======
x = read_tsv("movies4.tsv")
View(x)
unique(x)
unique(x)
unique(x)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
y<- x %>%
group_by(first_actor)%>%
count(first_actor)%>%
arrange(desc(n))
head(y,2)
z<- x%>%
group_by(first_actor)%>%
mean(revenue)
z<- x%>%
group_by(first_actor)%>%
mean(revenue, na.rm=T)
z<- x%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
View(z)
z = slice(z, 1:64)
View(z)
z<- x%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
z = slice(z, -1:64)
?slice
z = slice(z, -(1:64))
View(z)
head(y,1)
head(z,1)
mean(x$revenue)
head(z,1)
mean(x$revenue)
>>>>>>> dfdb1241f6dc9b10d8d448f19474f8e4d50036db
View(movies4)
knitr::opts_chunk$set(echo = TRUE)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
library(tidyverse)
library(tidyverse)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
var(movies4$profit_in_millions)
varianve <- var(movies4$profit_in_millions)
variance <- var(movies4$profit_in_millions)
variance
movies_sample<-sample(movies4,25)
movies_sample <- sample(movies4,25)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
View(movies_sample)
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
knitr::opts_chunk$set(echo = TRUE)
sample_vars<- c()
for(i in 100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp)
}
library(tidyverse)
for(i in 100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp)
}
for(i in 100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
View(mov_samp)
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars)
ggplot(sample_vars, aes(x=variance))+
geom_histogram()
hist(sample_vars)
knitr::opts_chunk$set(echo = TRUE)
mean(y$n)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readr")
#install.packages("tidyverse")
library(tidyverse)
library(readr)
movies4 = read_tsv("movies4.tsv")
movies4 %>%
count(index)
movies4
#808 observations
#19 variables
#19 subjects
#A subject consists of a multitude of information about a movie, from the title to the release year to the head actor to the vote average.
#Nominal variables: keywords, original_language, title, genre, first_actor, first_actor_gender, director_first_name, director_gender
#Ordinal variables: NA
#Interval variables: index, release_date, release_year, release_month, release_day
#Ratio variables: budget, popularity, revenue, runtime, vote_average, vote_count
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
profit_summary = movies4 %>%
summarise(mean_profit=mean(profits, na.rm=T),
median_profit=median(profits, na.rm=T),
max_profit=max(profits, na.rm=T),
min_profit=min(profits, na.rm=T)
)
profit_summary
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4_highest = movies4 %>%
filter(profits==max(profits, na.rm=T))%>%
select(title, profits)
movies4_highest
movies4_lowest = movies4 %>%
filter(profits==min(profits, na.rm=T))%>%
select(title, profits)
movies4_lowest
library (ggplot2)
boxplot_profits<-ggplot(movies4, aes(x = title, y = profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits
quartiles = quantile(movies4$profits)
quartiles
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 =movies4%>%
mutate(log_profits=log(profits))
movies4%>%
summarise(mean(log_profits, na.rm=T))
movies4=read_tsv("movies4.tsv")
movies4=movies4%>%
mutate(profits=revenue-budget)%>%
mutate(log_profits = ifelse(profits <= 0, NA, log(profits)))
movies4
movies4%>%
summarise(mean(log_profits, na.rm=T))
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot()
ggplot(movies4, aes(x=runtime, y=vote_average)) +
geom_point()
#WRITE YOUR CODE HERE
library(tidyverse)
y<- x %>%
group_by(first_actor)%>%
count(first_actor)%>%
arrange(desc(n))
head(y,2)
#WRITE YOUR CODE HERE
z<- x%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
z = slice(z, -(1:64))
head(z,1)
mean(x$revenue)
mean(y$n)
#WRITE YOUR CODE HERE
z<- x%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
z = slice(z, -(1:64))
head(z,1)
mean_revenue = mean(x$revenue)
mean_revenue
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
View(movies4)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
variance <- var(movies4$profit_in_millions)
variance
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars,
col = "red",
lwd = 3))
hist(sample_vars)
abline(v=mean(sample_vars,
col = "red",
lwd = 3))
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(s=sd(sample_vars),
col="blue",
lwd = 3)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
mean(sample_vars)
sd(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
variance <- var(movies4$profit_in_millions)
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
mean(sample_vars)
sd(sample_vars)
print("mean = ", mean(sample_vars))
cat("mean = ", mean(sample_vars))
cat("standard deviation =",sd(sample_vars))
cat("mean = ", mean(sample_vars), n/)
cat("mean = ", mean(sample_vars), \n)
cat("mean = ", mean(sample_vars), "\n")
cat("standard deviation =",sd(sample_vars))
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
cat("mean = ", mean(sample_vars), "\n")
cat("standard deviation =",sd(sample_vars))
