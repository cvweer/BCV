min(sample_vars)
max(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
cat("mean = ", mean(sample_vars), "\n")
cat("standard deviation =",sd(sample_vars))
mean(sample_vars)
sd(sample_vars)
library(tidyverse)
library(readr)
movies4
movies_thriller <- movies4 %>%
filter(genre=="Thriller")%>%
summarise(
n=n(),
mean_runtime=mean(runtime, na.rm=T),
sd_runtime=sd(runtime, na.rm=T),
se=sd_runtime/sqrt(n()),
t_critical=qt(0.995, df=n-1),
ci_lower=mean_runtime-t_critical*se,
ci_upper=mean_runtime+t_critical*se)%>%
print()
movies4 <- movies4%>%
mutate(runtime = ifelse(runtime == 0, NA, runtime))
movies_thrillerb <- movies4 %>%
filter(genre == "Thriller")
mean_runtime_thriller = mean(movies_thrillerb$runtime, na.rm = T)
n = sum(!is.na(movies_thrillerb$runtime))
sd_thriller = sd(movies_thrillerb$runtime, na.rm = T)
se_thriller = sd_thriller/ sqrt(n)
z_value = qnorm(0.995)
lowerbound = mean_runtime_thriller-z_value * se_thriller
upperbound = mean_runtime_thriller+z_value * se_thriller
print(c(lowerbound,upperbound))
data.frame(
Methode = c("a","b"),
Lower = c(movies_thriller$ci_lower, lowerbound),
Upper = c(movies_thriller$ci_upper, upperbound)
)
interval_a = movies_thriller$ci_upper - movies_thriller$ci_lower
interval_b = upperbound-lowerbound
interval_a > interval_b
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0"
}else{
conc = "accept H0"
}
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0"
}else{
conc = "accept H0"
}
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0"
}else{
conc = "accept H0"
}
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readr")
#install.packages("tidyverse")
library(tidyverse)
library(readr)
movies4 = read_tsv("movies4.tsv")
movies4 %>%
count(index)
movies4
#808 observations
#19 variables
#19 subjects
#A subject consists of a multitude of information about a movie, from the title to the release year to the head actor to the vote average.
#Nominal variables: keywords, original_language, title, genre, first_actor, first_actor_gender, director_first_name, director_gender
#Ordinal variables: NA
#Interval variables: index, release_date, release_year, release_month, release_day
#Ratio variables: budget, popularity, revenue, runtime, vote_average, vote_count
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
profit_summary = movies4 %>%
summarise(mean_profit=mean(profits, na.rm=T),
median_profit=median(profits, na.rm=T),
max_profit=max(profits, na.rm=T),
min_profit=min(profits, na.rm=T)
)
profit_summary
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4_highest = movies4 %>%
filter(profits==max(profits, na.rm=T))%>%
select(title, profits)
movies4_highest
movies4_lowest = movies4 %>%
filter(profits==min(profits, na.rm=T))%>%
select(title, profits)
movies4_lowest
library (ggplot2)
boxplot_profits<-ggplot(movies4, aes(x = title, y = profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits
quartiles = quantile(movies4$profits)
quartiles
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 =movies4%>%
mutate(log_profits=log(profits))
movies4%>%
summarise(mean(log_profits, na.rm=T))
movies4=read_tsv("movies4.tsv")
movies4=movies4%>%
mutate(profits=revenue-budget)%>%
mutate(log_profits = ifelse(profits <= 0, NA, log(profits)))
movies4
movies4%>%
summarise(mean(log_profits, na.rm=T))
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot()
ggplot(movies4, aes(x=runtime, y=vote_average)) +
geom_point()
#WRITE YOUR CODE HERE
library(tidyverse)
y<- movies4 %>%
group_by(first_actor)%>%
count(first_actor)%>%
arrange(desc(n))
head(y,2)
#WRITE YOUR CODE HERE
z<- movies4%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
z = slice(z, -(1:64))
head(z,1)
mean_revenue = mean(movies4$revenue)
mean_revenue
mean(y$n)
library(tidyverse)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
variance <- var(movies4$profit_in_millions)
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
cat("mean = ", mean(sample_vars), "\n")
cat("standard deviation =",sd(sample_vars))
mean(sample_vars)
sd(sample_vars)
library(tidyverse)
library(readr)
movies4
movies_thriller <- movies4 %>%
filter(genre=="Thriller")%>%
summarise(
n=n(),
mean_runtime=mean(runtime, na.rm=T),
sd_runtime=sd(runtime, na.rm=T),
se=sd_runtime/sqrt(n()),
t_critical=qt(0.995, df=n-1),
ci_lower=mean_runtime-t_critical*se,
ci_upper=mean_runtime+t_critical*se)%>%
print()
movies4 <- movies4%>%
mutate(runtime = ifelse(runtime == 0, NA, runtime))
movies_thrillerb <- movies4 %>%
filter(genre == "Thriller")
mean_runtime_thriller = mean(movies_thrillerb$runtime, na.rm = T)
n = sum(!is.na(movies_thrillerb$runtime))
sd_thriller = sd(movies_thrillerb$runtime, na.rm = T)
se_thriller = sd_thriller/ sqrt(n)
z_value = qnorm(0.995)
lowerbound = mean_runtime_thriller-z_value * se_thriller
upperbound = mean_runtime_thriller+z_value * se_thriller
print(c(lowerbound,upperbound))
data.frame(
Methode = c("a","b"),
Lower = c(movies_thriller$ci_lower, lowerbound),
Upper = c(movies_thriller$ci_upper, upperbound)
)
interval_a = movies_thriller$ci_upper - movies_thriller$ci_lower
interval_b = upperbound-lowerbound
interval_a > interval_b
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi2<crit_low|chi2>crit_high){
conc = "reject H0"
}else{
conc = "accept H0"
}
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi_square<crit_low|chi2>crit_high){
conc = "reject H0"
}else{
conc = "accept H0"
}
if (chi_square<critl|chi2>crith){
conc = "reject H0"
}else{
conc = "accept H0"
}
if (chi_square<critl|chi_square>crith){
conc = "reject H0"
}else{
conc = "accept H0"
}
sample_var = var(movies4$runtime)
n = length(movies4$runtime)
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi_square<critl|chi_square>crith){
conc = "reject H0"
}else{
conc = "accept H0"
}
sample_var = var(movies4$runtime, na.rm = T)
n <- sum(!is.na(movies4$runtime))
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi_square<critl|chi_square>crith){
conc = "reject H0"
}else{
conc = "accept H0"
}
conc
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 =movies4%>%
mutate(log_profits=log(profits))
movies4%>%
summarise(mean(log_profits, na.rm=T))
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 =movies4%>%
mutate(log_profits=log(profits))
movies4%>%
summarise(mean(log_profits, na.rm=T))
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4_highest = movies4 %>%
filter(profits==max(profits, na.rm=T))%>%
select(title, profits)
movies4_highest
movies4_lowest = movies4 %>%
filter(profits==min(profits, na.rm=T))%>%
select(title, profits)
movies4_lowest
---
title: "QRM II Graded Assignment (11), Period 1 2025"
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readr")
#install.packages("tidyverse")
library(tidyverse)
library(readr)
movies4 = read_tsv("movies4.tsv")
movies4 %>%
count(index)
movies4
#808 observations
#19 variables
#19 subjects
#A subject consists of a multitude of information about a movie, from the title to the release year to the head actor to the vote average.
#Nominal variables: keywords, original_language, title, genre, first_actor, first_actor_gender, director_first_name, director_gender
#Ordinal variables: NA
#Interval variables: index, release_date, release_year, release_month, release_day
#Ratio variables: budget, popularity, revenue, runtime, vote_average, vote_count
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
profit_summary = movies4 %>%
summarise(mean_profit=mean(profits, na.rm=T),
median_profit=median(profits, na.rm=T),
max_profit=max(profits, na.rm=T),
min_profit=min(profits, na.rm=T)
)
profit_summary
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4_highest = movies4 %>%
filter(profits==max(profits, na.rm=T))%>%
select(title, profits)
movies4_highest
movies4_lowest = movies4 %>%
filter(profits==min(profits, na.rm=T))%>%
select(title, profits)
movies4_lowest
library (ggplot2)
boxplot_profits<-ggplot(movies4, aes(x = title, y = profits)) +
geom_boxplot() +
labs(title="Movie Profits",
y="Profit")
boxplot_profits
quartiles = quantile(movies4$profits)
quartiles
movies4 = read_tsv("movies4.tsv")
movies4 = movies4 %>%
mutate(profits=revenue-budget)
movies4 =movies4%>%
mutate(log_profits=log(profits))
movies4%>%
summarise(mean(log_profits, na.rm=T))
movies4=read_tsv("movies4.tsv")
movies4=movies4%>%
mutate(profits=revenue-budget)%>%
mutate(log_profits = ifelse(profits <= 0, NA, log(profits)))
movies4
movies4%>%
summarise(mean(log_profits, na.rm=T))
ggplot(movies4, aes(y=log_profits)) +
geom_boxplot()
ggplot(movies4, aes(x=runtime, y=vote_average)) +
geom_point()
#WRITE YOUR CODE HERE
library(tidyverse)
y<- movies4 %>%
group_by(first_actor)%>%
count(first_actor)%>%
arrange(desc(n))
head(y,2)
#WRITE YOUR CODE HERE
z<- movies4%>%
group_by(first_actor)%>%
summarise(mean_r = mean(revenue, na.rm = TRUE))
z = slice(z, -(1:64))
head(z,1)
mean_revenue = mean(movies4$revenue)
mean_revenue
mean(y$n)
library(tidyverse)
movies4 <- movies4 %>%
mutate(profit_in_millions = profits / 1000000)
variance <- var(movies4$profit_in_millions)
variance
set.seed(56564)
movies_sample <- movies4[sample(nrow(movies4), 25), ]
variance_sample <- var(movies_sample$profit_in_millions)
variance_sample
variance
set.seed(293)
sample_vars<- c()
for(i in 1:100){
mov_samp<- slice_sample(movies4, n=25)
sample_vars[i]<- var(mov_samp$profit_in_millions)
}
print(sample_vars[1:9])
min(sample_vars)
max(sample_vars)
hist(sample_vars)
abline(v=mean(sample_vars),
col = "red",
lwd = 3)
abline(v=sd(sample_vars),
col="blue",
lwd = 3)
cat("mean = ", mean(sample_vars), "\n")
cat("standard deviation =",sd(sample_vars))
mean(sample_vars)
sd(sample_vars)
library(tidyverse)
library(readr)
movies4
movies_thriller <- movies4 %>%
filter(genre=="Thriller")%>%
summarise(
n=n(),
mean_runtime=mean(runtime, na.rm=T),
sd_runtime=sd(runtime, na.rm=T),
se=sd_runtime/sqrt(n()),
t_critical=qt(0.995, df=n-1),
ci_lower=mean_runtime-t_critical*se,
ci_upper=mean_runtime+t_critical*se)%>%
print()
movies4 <- movies4%>%
mutate(runtime = ifelse(runtime == 0, NA, runtime))
movies_thrillerb <- movies4 %>%
filter(genre == "Thriller")
mean_runtime_thriller = mean(movies_thrillerb$runtime, na.rm = T)
n = sum(!is.na(movies_thrillerb$runtime))
sd_thriller = sd(movies_thrillerb$runtime, na.rm = T)
se_thriller = sd_thriller/ sqrt(n)
z_value = qnorm(0.995)
lowerbound = mean_runtime_thriller-z_value * se_thriller
upperbound = mean_runtime_thriller+z_value * se_thriller
print(c(lowerbound,upperbound))
data.frame(
Methode = c("a","b"),
Lower = c(movies_thriller$ci_lower, lowerbound),
Upper = c(movies_thriller$ci_upper, upperbound)
)
interval_a = movies_thriller$ci_upper - movies_thriller$ci_lower
interval_b = upperbound-lowerbound
interval_a > interval_b
sample_var = var(movies4$runtime, na.rm = T)
n <- sum(!is.na(movies4$runtime))
H0 = 500
chi_square = ((n-1)*sample_var)/H0
a = 0.05
critl = qchisq(a/2, df=n-1)
crith = qchisq(1-a/2, df = n-1)
if (chi_square<critl|chi_square>crith){
conc = "reject H0"
}else{
conc = "accept H0"
}
conc
hist(movies4$runtime)
qqnorm(movies4$runtime)
qqline(movies4$runtime, col = "red")
#WRITE YOUR CODE HERE
movies4 <- movies4%>%
mutate(vote_average_rounded = floor(vote_average))
ggplot(movies4, aes(x= vote_average_rounded)) +
scale_x_continuous(breaks = seq(0,10, by = 1))+
geom_histogram()
movies_mean_per_vote <- movies4 %>%
group_by(vote_average_rounded) %>%
summarise(Mean_profit_per_vote = mean(profit_in_millions))
ggplot(movies_mean_per_vote, aes(x = vote_average_rounded, y= Mean_profit_per_vote))+
scale_x_continuous(breaks = seq(0,10, by = 1), minor_breaks = F)+
scale_y_continuous(breaks = seq(-50, 250, 25), limits = c(-25,250)) +
labs(x = "Average vote",
y = "Profit in millions",
title = "Average profit per rating")+
geom_point()
movies_mean_per_vote[8,2]
mean_profit_per_year <- movies4%>%
group_by(release_year)%>%
summarise(mean_profit_per_year = mean(profit_in_millions),
n = n(),
sd = sd(profit_in_millions),
se = sd / sqrt(n),
t_value = qt(0.975, df = n-1),
lowerbound = mean_profit_per_year - t_value * se,
upperbound = mean_profit_per_year + t_value * se,
.groups = "drop")
ggplot(mean_profit_per_year, aes(x = release_year,y = mean_profit_per_year))+
geom_point()+
scale_x_continuous(breaks = seq(1990,2016, by = 2))+
scale_y_continuous(breaks = seq(-50,350, by = 50))+
labs(x = "Release year",
y = "Profit in million euro",
title = "Mean profit per year with 95% confidence interval")+
geom_errorbar(aes(ymin = lowerbound,
ymax = upperbound))
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
